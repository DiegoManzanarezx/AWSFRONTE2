{"ast":null,"code":"var _jsxFileName = \"/Users/dieguirri/Documents/6to/Profe_Valverde/REACTJS/AWSFront2-v2B/src/views/agentViews/LineChart.js\";\nimport React from \"react\";\nimport \"./AgentFilter.css\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport faker from 'faker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Chart.js Line Chart'\n    }\n  }\n};\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\nexport const data = {\n  labels,\n  datasets: [{\n    label: 'Dataset 1',\n    data: labels.map(() => faker.datatype.number({\n      min: -1000,\n      max: 1000\n    })),\n    borderColor: 'rgb(255, 99, 132)',\n    backgroundColor: 'rgba(255, 99, 132, 0.5)'\n  }, {\n    label: 'Dataset 2',\n    data: labels.map(() => faker.datatype.number({\n      min: -1000,\n      max: 1000\n    })),\n    borderColor: 'rgb(53, 162, 235)',\n    backgroundColor: 'rgba(53, 162, 235, 0.5)'\n  }]\n};\nexport default function LineChart() {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thur', 'Fri'],\n    dataSets: [{\n      Label: 'Calls per week',\n      data: [12, 19, 11, 9, 7]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 16\n  }, this);\n}\n_c = LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/dieguirri/Documents/6to/Profe_Valverde/REACTJS/AWSFront2-v2B/src/views/agentViews/LineChart.js"],"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","faker","register","options","responsive","plugins","legend","position","title","display","text","labels","data","datasets","label","map","datatype","number","min","max","borderColor","backgroundColor","LineChart","dataSets","Label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AAEA,SACIC,KAAK,IAAIC,OADb,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,YAJJ,EAKIC,WALJ,EAMIC,KANJ,EAOIC,OAPJ,EAQIC,MARJ,QASS,UATT;AAUE,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGFT,OAAO,CAACU,QAAR,CACIT,aADJ,EAEIC,WAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,MAPJ;AAUA,OAAO,MAAMI,OAAO,GAAG;AACnBC,EAAAA,UAAU,EAAE,IADO;AAEnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADD;AAIPC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,IAAI,EAAE;AAFD;AAJA;AAFU,CAAhB;AAaL,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CAAf;AAGF,OAAO,MAAMC,IAAI,GAAG;AAChBD,EAAAA,MADgB;AAEhBE,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,WADT;AAEEF,IAAAA,IAAI,EAAED,MAAM,CAACI,GAAP,CAAW,MAAMd,KAAK,CAACe,QAAN,CAAeC,MAAf,CAAsB;AAAEC,MAAAA,GAAG,EAAE,CAAC,IAAR;AAAcC,MAAAA,GAAG,EAAE;AAAnB,KAAtB,CAAjB,CAFR;AAGEC,IAAAA,WAAW,EAAE,mBAHf;AAIEC,IAAAA,eAAe,EAAE;AAJnB,GADQ,EAOR;AACEP,IAAAA,KAAK,EAAE,WADT;AAEEF,IAAAA,IAAI,EAAED,MAAM,CAACI,GAAP,CAAW,MAAMd,KAAK,CAACe,QAAN,CAAeC,MAAf,CAAsB;AAAEC,MAAAA,GAAG,EAAE,CAAC,IAAR;AAAcC,MAAAA,GAAG,EAAE;AAAnB,KAAtB,CAAjB,CAFR;AAGEC,IAAAA,WAAW,EAAE,mBAHf;AAIEC,IAAAA,eAAe,EAAE;AAJnB,GAPQ;AAFM,CAAb;AAkBP,eAAe,SAASC,SAAT,GAAoB;AAC/B,QAAMV,IAAI,GAAG;AACTD,IAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,MAAtB,EAA8B,KAA9B,CADC;AAETY,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAE,gBADX;AAEIZ,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,CAAhB;AAFV,KADM;AAFD,GAAb;AAUI,sBAAO,QAAC,IAAD;AAAM,IAAA,OAAO,EAAET,OAAf;AAAwB,IAAA,IAAI,EAAES;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACP;KAZuBU,S","sourcesContent":["import React from \"react\";\nimport \"./AgentFilter.css\";\n\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\n  import { Line } from 'react-chartjs-2';\n  import faker from 'faker';\n\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n  );\n\nexport const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Line Chart',\n      },\n    },\n  };\n  \n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\n\nexport const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Dataset 1',\n        data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      },\n      {\n        label: 'Dataset 2',\n        data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n      },\n    ],\n  };\n\nexport default function LineChart(){\n    const data = {\n        labels: ['Mon', 'Tue', 'Wed', 'Thur', 'Fri'],\n        dataSets: [\n            {\n                Label: 'Calls per week',\n                data: [12, 19, 11, 9, 7]\n            }\n        ]\n    }\n\n        return <Line options={options} data={data} />;\n}"]},"metadata":{},"sourceType":"module"}