{"ast":null,"code":"var _jsxFileName = \"/Users/dieguirri/Documents/6to/Profe_Valverde/REACTJS/AWSFront2-v2B/src/views/agentViews/LineChart.js\";\nimport React from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport clientes from \"./AgentStatistics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LineChart = () => {\n  const data = {\n    labels: ['1', '2', '3', '4'],\n    datasets: [{\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      data: [100, 120, 50, 110],\n      lineTension: 0\n    }, {\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\n      data: [70, 30, 20, 12],\n      lineTension: 0\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: [clientes.filter(item => {\n      if (item.id == agentId) {\n        return item;\n      }\n    }).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: [\"Agent \", item.nombre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h7\",\n        gutterBottom: true,\n        children: [\"ID: \", item.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DoughnutChart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, item.nombre, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/dieguirri/Documents/6to/Profe_Valverde/REACTJS/AWSFront2-v2B/src/views/agentViews/LineChart.js"],"names":["React","Line","Chart","registerables","register","clientes","LineChart","data","labels","datasets","borderColor","backgroundColor","lineTension","filter","item","id","agentId","map","nombre"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,UAArC;AACAD,KAAK,CAACE,QAAN,CAAe,GAAGD,aAAlB;AACA,OAAOE,QAAP,MAAqB,mBAArB;;;AAIA,MAAMC,SAAS,GAAG,MAAM;AAEpB,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CADC;AAETC,IAAAA,QAAQ,EAAC,CACL;AACIC,MAAAA,WAAW,EAAE,mBADjB;AAEIC,MAAAA,eAAe,EAAE,yBAFrB;AAGIJ,MAAAA,IAAI,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,EAAT,EAAY,GAAZ,CAHV;AAIIK,MAAAA,WAAW,EAAE;AAJjB,KADK,EAOL;AACIF,MAAAA,WAAW,EAAE,mBADjB;AAEIC,MAAAA,eAAe,EAAE,yBAFrB;AAGIJ,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,CAHV;AAIIK,MAAAA,WAAW,EAAE;AAJjB,KAPK;AAFA,GAAb;AAkBA,sBAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eACKP,QAAQ,CAACQ,MAAT,CAAiBC,IAAD,IAAU;AACvB,UAAGA,IAAI,CAACC,EAAL,IAAWC,OAAd,EAAsB;AAClB,eAAOF,IAAP;AACH;AACJ,KAJA,EAIEG,GAJF,CAIOH,IAAD,iBACH;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,YAAY,MAArC;AAAA,6BACWA,IAAI,CAACI,MADhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,YAAY,MAArC;AAAA,2BACSJ,IAAI,CAACC,EADd;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA,OAAUD,IAAI,CAACI,MAAf;AAAA;AAAA;AAAA;AAAA,YALH,CADL,eAqBI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEX;AAAZ;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA0BH,CA9CD;;KAAMD,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\n\nimport { Line } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport clientes from \"./AgentStatistics\";\n\n\n\nconst LineChart = () => {\n\n    const data = {\n        labels: ['1','2','3','4'],\n        datasets:[\n            {\n                borderColor: 'rgb(255, 99, 132)',\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                data: [100,120,50,110],\n                lineTension: 0,\n            },\n            {\n                borderColor: 'rgb(53, 162, 235)',\n                backgroundColor: 'rgba(53, 162, 235, 0.5)',\n                data: [70,30,20,12],\n                lineTension: 0,\n            }\n        ]\n        }\n\n    return (\n\n        <div className=\"chart\">\n            {clientes.filter((item) => {\n                if(item.id == agentId){\n                    return item;\n                }\n            }).map((item) => (\n                <div key={item.nombre}>\n                    <Typography variant=\"h5\" gutterBottom>\n                        Agent {item.nombre}      \n                    </Typography>\n\n                    <Typography variant=\"h7\" gutterBottom>\n                        ID: {item.id}      \n                    </Typography>\n                    \n                    <LineChart />\n                    <BarChart />\n                    <DoughnutChart />\n\n                </div>\n            ))}\n            <Line data={data} />\n        </div>\n    )\n}\n\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}